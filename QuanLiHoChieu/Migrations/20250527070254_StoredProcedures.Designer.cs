// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuanLiHoChieu.Data;

#nullable disable

namespace QuanLiHoChieu.Migrations
{
    [DbContext(typeof(PassportDbContext))]
    [Migration("20250527070254_StoredProcedures")]
    partial class StoredProcedures
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuanLiHoChieu.Models.AuditLog", b =>
                {
                    b.Property<int>("LogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogID"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LogID");

                    b.ToTable("AuditLog", (string)null);
                });

            modelBuilder.Entity("QuanLiHoChieu.Models.LuuTru", b =>
                {
                    b.Property<string>("PassportID")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CoGiaTriDen")
                        .HasColumnType("datetime2");

                    b.Property<string>("FormID")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("NgayCap")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayNop")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("PassportID");

                    b.HasIndex("FormID")
                        .IsUnique();

                    b.HasIndex("UserID");

                    b.ToTable("LuuTru", (string)null);
                });

            modelBuilder.Entity("QuanLiHoChieu.Models.PassportData", b =>
                {
                    b.Property<string>("FormID")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<byte[]>("CCCD")
                        .IsRequired()
                        .HasColumnType("varbinary(900)");

                    b.Property<byte[]>("CoQuan")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("DanToc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("DiaChiCoQuan")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("Email")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Hinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("HoTen")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("HoTenCha")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("HoTenMe")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("NgayCap")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayNop")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgaySinhCha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgaySinhMe")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("NgheNghiep")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("NoiCap")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("NoiDungDeNghi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("NoiSinh")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("NoiTiepNhanHS")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("SĐT")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("TonGiao")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("thtPhuongXa")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("thtQuanHuyen")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("thtSoNhaDuong")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("thtTinhThanh")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("ttPhuongXa")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("ttQuanHuyen")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("ttSoNhaDuong")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("ttTinhThanh")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("FormID");

                    b.HasIndex("CCCD");

                    b.ToTable("PassportData", (string)null);
                });

            modelBuilder.Entity("QuanLiHoChieu.Models.ResidentData", b =>
                {
                    b.Property<byte[]>("CCCD")
                        .HasColumnType("varbinary(900)");

                    b.Property<string>("DanToc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<byte[]>("HoTen")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("HoTenCha")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("HoTenMe")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("NgayCap")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgaySinhCha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgaySinhMe")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("NoiCap")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("NoiSinh")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("SĐT")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("TonGiao")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("thtPhuongXa")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("thtQuanHuyen")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("thtSoNhaDuong")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("thtTinhThanh")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("ttPhuongXa")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("ttQuanHuyen")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("ttSoNhaDuong")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("ttTinhThanh")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("CCCD");

                    b.ToTable("ResidentData", (string)null);
                });

            modelBuilder.Entity("QuanLiHoChieu.Models.TaiKhoan", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Activated")
                        .HasColumnType("bit");

                    b.Property<byte[]>("MatKhau")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Username");

                    b.ToTable("TaiKhoan", (string)null);
                });

            modelBuilder.Entity("QuanLiHoChieu.Models.User", b =>
                {
                    b.Property<string>("UserID")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ChucVu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("Email")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<byte[]>("HoTen")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("QueQuan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("SĐT")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UserID");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("QuanLiHoChieu.Models.ViewModels.DecryptedUserVM", b =>
                {
                    b.Property<string>("ChucVu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioiTinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("QueQuan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("QuanLiHoChieu.Models.XuLy", b =>
                {
                    b.Property<int>("XuLyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("XuLyID"));

                    b.Property<string>("FormID")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LoaiXuLy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("NgayXuLy")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("XuLyID");

                    b.HasIndex("FormID");

                    b.HasIndex("UserID");

                    b.ToTable("XuLy", (string)null);
                });

            modelBuilder.Entity("QuanLiHoChieu.Models.LuuTru", b =>
                {
                    b.HasOne("QuanLiHoChieu.Models.PassportData", "PassportData")
                        .WithMany()
                        .HasForeignKey("FormID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLiHoChieu.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PassportData");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuanLiHoChieu.Models.PassportData", b =>
                {
                    b.HasOne("QuanLiHoChieu.Models.ResidentData", "ResidentData")
                        .WithMany()
                        .HasForeignKey("CCCD")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResidentData");
                });

            modelBuilder.Entity("QuanLiHoChieu.Models.User", b =>
                {
                    b.HasOne("QuanLiHoChieu.Models.TaiKhoan", "TaiKhoan")
                        .WithOne("User")
                        .HasForeignKey("QuanLiHoChieu.Models.User", "Username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("QuanLiHoChieu.Models.XuLy", b =>
                {
                    b.HasOne("QuanLiHoChieu.Models.PassportData", "PassportData")
                        .WithMany()
                        .HasForeignKey("FormID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLiHoChieu.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PassportData");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuanLiHoChieu.Models.TaiKhoan", b =>
                {
                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
